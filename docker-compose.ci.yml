---
version: "3"
services:
  db:
    image: postgres:12-alpine
    command: postgres -c 'shared_buffers=128MB' -c 'fsync=off' -c 'synchronous_commit=off'
      -c 'full_page_writes=off' -c 'max_connections=100' -c 'bgwriter_lru_maxpages=0'
      -c 'client_min_messages=warning'
    environment:
      - POSTGRES_PASSWORD=password
    restart: always
    volumes:
      - ./db/docker-entrypoint-initdb.d.ci:/docker-entrypoint-initdb.d
      - pg-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
  frontend:
    image: eu.gcr.io/akvo-lumen/akvo-webform/frontend:latest
    command: ["nginx", "-g", "daemon off;"]
    depends_on:
      - db
      - backend
    network_mode: service:mainnetwork
    volumes:
      - ./frontend:/app:delegated
    working_dir: /app
  backend:
    image: eu.gcr.io/akvo-lumen/akvo-webform/backend:latest
    command: ["sh", "run.sh"]
    working_dir: /app
    volumes:
      - ./backend:/app:delegated
    environment:
      - BASIC_ADMIN=admin
      - BASIC_PWD=webform
      - FLOW_SERVICE_URL
      - AUTH0_USER
      - AUTH0_PWD
      - AUTH0_URL
      - AUTH0_CLIENT_FLOW
      - SQLALCHEMY_DATABASE_URI=postgresql://akvotc:password@0.0.0.0:5432/webforms
    depends_on:
      - db
    network_mode: service:mainnetwork
  ci:
    network_mode: service:mainnetwork
    image: alpine:3.14.0
    volumes:
      - ./ci/test:/test:ro
    working_dir: /test
    entrypoint: ./entrypoint.sh
    depends_on:
      - backend
      - frontend
      - db
  mainnetwork:
    image: alpine:3.14.0
    command: ["tail", "-f", "/dev/null"]
    ports:
      - 3000:3000
      - 5000:5000
volumes:
  pg-data: {}
